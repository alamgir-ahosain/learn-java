1. equals() Method: Used for logical equality checks between objects. By default, it compares object references, but it's commonly overridden to compare object states.

2. hashCode() Method: Generates an integer hash code representing an object. It's crucial for the performance of hash-based collections like HashMap.

3. Equals-HashCode Contract: If two objects are equal according to equals(), they must have the same hash code. However, two objects with the same hash code aren't necessarily equal.

4. Overriding Both: If equals() is overridden, hashCode() should also be overridden to maintain consistency between these methods.


Rule 1:
        If two objects have different hash codes, they are definitely not equal (equals() must return false).
        equal() return true -> hash code must be equal.
        equal() return false -> hash code must be different.

Rule 2:
        If two objects have the same hash code, they might or might not be equal.
        Because hash collisions exist (different objects can hash to the same number).
        Same hash code → maybe equal, maybe not → must check with equals().